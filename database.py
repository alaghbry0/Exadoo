import asyncio
import asyncpg
import os
from dotenv import load_dotenv

load_dotenv()

async def test_connection():
    try:
        print("ðŸ”„ Ù…Ø­Ø§ÙˆÙ„Ø© Ø§Ù„Ø§ØªØµØ§Ù„ Ø¨Ù‚Ø§Ø¹Ø¯Ø© Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª...")
        conn = await asyncpg.connect(
            user=os.getenv('DB_USER'),
            password=os.getenv('DB_PASSWORD'),
            database=os.getenv('DB_NAME'),
            host=os.getenv('DB_HOST'),
            port=int(os.getenv('DB_PORT', 5432)),
            ssl="require",
            statement_cache_size=0
        )
        print("âœ… Connection successful!")
        await conn.close()
        print("ðŸ”´ Connection closed.")
    except Exception as e:
        print(f"ðŸš¨ Ø®Ø·Ø£ Ø£Ø«Ù†Ø§Ø¡ Ø§Ù„Ø§ØªØµØ§Ù„: {e}")

print("âš¡ Running test_connection...")  # âœ… Ù‡Ø°Ø§ Ø³ÙŠØ¸Ù‡Ø± Ø¥Ø°Ø§ ØªÙ… ØªØ´ØºÙŠÙ„ Ø§Ù„Ø³ÙƒØ±ÙŠØ¨Øª
asyncio.run(test_connection())
